!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
CC	work/Makefile	/^CC			= gcc$/;"	m
CFLAGS	work/Makefile	/^CFLAGS		= -Wall -Wextra -Werror -g$/;"	m
CHIP_HEIGHT	work/minimap.h	/^#define CHIP_HEIGHT /;"	d
CHIP_NUM_IN_COLUMN	work/minimap.h	/^#define CHIP_NUM_IN_COLUMN /;"	d
CHIP_NUM_IN_ROW	work/minimap.h	/^#define CHIP_NUM_IN_ROW /;"	d
CHIP_WIDTH	work/minimap.h	/^#define CHIP_WIDTH /;"	d
FALSE	ref/raycasting/raycasting-c/src/constants.h	/^#define FALSE /;"	d
FOV_ANGLE	ref/raycasting/raycasting-c/src/constants.h	/^#define FOV_ANGLE /;"	d
FPS	ref/raycasting/raycasting-c/src/constants.h	/^#define FPS /;"	d
FRAME_TIME_LENGTH	ref/raycasting/raycasting-c/src/constants.h	/^#define FRAME_TIME_LENGTH /;"	d
GRAY	work/minimap.h	/^#define GRAY /;"	d
KEY_ESC	work/minimap.h	/^#define KEY_ESC /;"	d
LIBS	work/Makefile	/^LIBS		= -L$(MLX_DIR) -lmlx -lXext -lX11 -lm$/;"	m
MAP_NUM_COLS	ref/raycasting/raycasting-c/src/constants.h	/^#define MAP_NUM_COLS /;"	d
MAP_NUM_ROWS	ref/raycasting/raycasting-c/src/constants.h	/^#define MAP_NUM_ROWS /;"	d
MINIMAP_H	work/minimap.h	/^#define MINIMAP_H$/;"	d
MINIMAP_SCALE_FACTOR	ref/raycasting/raycasting-c/src/constants.h	/^#define MINIMAP_SCALE_FACTOR /;"	d
MLX_DIR	work/Makefile	/^MLX_DIR		= minilibx-linux$/;"	m
MLX_H	work/mlx.h	/^#define	MLX_H$/;"	d
NAME	work/Makefile	/^NAME		= minimap$/;"	m
NUM_RAYS	ref/raycasting/raycasting-c/src/constants.h	/^#define NUM_RAYS /;"	d
OBJS	work/Makefile	/^OBJS		= $(SRCS:.c=.o)$/;"	m
OFFWHITE	work/minimap.h	/^#define OFFWHITE /;"	d
PI	ref/raycasting/raycasting-c/src/constants.h	/^#define PI /;"	d
Player	ref/raycasting/raycasting-c/src/main.c	/^struct Player {$/;"	s	file:
SCREEN_HEIGHT	work/minimap.h	/^#define SCREEN_HEIGHT /;"	d
SCREEN_NAME	work/minimap.h	/^#define SCREEN_NAME /;"	d
SCREEN_WIDTH	work/minimap.h	/^#define SCREEN_WIDTH /;"	d
SRCS	work/Makefile	/^SRCS		= main.c$/;"	m
TILE_SIZE	ref/raycasting/raycasting-c/src/constants.h	/^#define TILE_SIZE /;"	d
TRUE	ref/raycasting/raycasting-c/src/constants.h	/^#define TRUE /;"	d
TWO_PI	ref/raycasting/raycasting-c/src/constants.h	/^#define TWO_PI /;"	d
WINDOW_HEIGHT	ref/raycasting/raycasting-c/src/constants.h	/^#define WINDOW_HEIGHT /;"	d
WINDOW_WIDTH	ref/raycasting/raycasting-c/src/constants.h	/^#define WINDOW_WIDTH /;"	d
addr	work/minimap.h	/^  char *addr;$/;"	m	struct:__anon2
bits_per_pixel	work/minimap.h	/^  int bits_per_pixel;$/;"	m	struct:__anon2
castAllRays	ref/raycasting/raycasting-js/raycast.js	/^function castAllRays() {$/;"	f
create_monocolor_image	work/main.c	/^static t_img *create_monocolor_image(void *mlx_ptr, int color) {$/;"	f	file:
destroyWindow	ref/raycasting/raycasting-c/src/main.c	/^void destroyWindow() {$/;"	f
distanceBetweenPoints	ref/raycasting/raycasting-js/raycast.js	/^function distanceBetweenPoints(x1, y1, x2, y2) {$/;"	f
draw	ref/raycasting/raycasting-js/raycast.js	/^function draw() {$/;"	f
endian	work/minimap.h	/^  int endian;$/;"	m	struct:__anon2
foundHorzWallHit	ref/raycasting/raycasting-js/raycast.js	/^        var foundHorzWallHit = false;$/;"	v
foundVertWallHit	ref/raycasting/raycasting-js/raycast.js	/^        var foundVertWallHit = false;$/;"	v
height	ref/raycasting/raycasting-c/src/main.c	/^    float height;$/;"	m	struct:Player	file:
horzWallColor	ref/raycasting/raycasting-js/raycast.js	/^        var horzWallColor = 0;$/;"	v
horzWallHitX	ref/raycasting/raycasting-js/raycast.js	/^        var horzWallHitX = 0;$/;"	v
horzWallHitY	ref/raycasting/raycasting-js/raycast.js	/^        var horzWallHitY = 0;$/;"	v
img_ptr	work/minimap.h	/^  void *img_ptr;$/;"	m	struct:__anon2
init_mlx	work/main.c	/^static void init_mlx(t_mlx *mlx) {$/;"	f	file:
initializeWindow	ref/raycasting/raycasting-c/src/main.c	/^int initializeWindow() {$/;"	f
isGameRunning	ref/raycasting/raycasting-c/src/main.c	/^int isGameRunning = FALSE;$/;"	v
is_wall	work/main.c	/^static bool is_wall(int x, int y) {$/;"	f	file:
keyPressed	ref/raycasting/raycasting-js/raycast.js	/^function keyPressed() {$/;"	f
keyReleased	ref/raycasting/raycasting-js/raycast.js	/^function keyReleased() {$/;"	f
line_length	work/minimap.h	/^  int line_length;$/;"	m	struct:__anon2
main	ref/raycasting/raycasting-c/src/main.c	/^int main() {$/;"	f
main	work/main.c	/^int main(void) {$/;"	f
map	ref/raycasting/raycasting-c/src/main.c	/^const int map[MAP_NUM_ROWS][MAP_NUM_COLS] = {$/;"	v
mapGridIndexX	ref/raycasting/raycasting-js/raycast.js	/^        var mapGridIndexX = Math.floor(x \/ TILE_SIZE);$/;"	v
mapGridIndexY	ref/raycasting/raycasting-js/raycast.js	/^        var mapGridIndexY = Math.floor(y \/ TILE_SIZE);$/;"	v
mlx_ptr	work/minimap.h	/^  void *mlx_ptr;$/;"	m	struct:__anon1
movePlayer	ref/raycasting/raycasting-c/src/main.c	/^void movePlayer(float deltaTime) {$/;"	f
my_mlx_pixel_put	work/main.c	/^static void my_mlx_pixel_put(t_img *img, int x, int y, int color) {$/;"	f	file:
nextHorzTouchX	ref/raycasting/raycasting-js/raycast.js	/^        var nextHorzTouchX = xintercept;$/;"	v
nextHorzTouchY	ref/raycasting/raycasting-js/raycast.js	/^        var nextHorzTouchY = yintercept;$/;"	v
nextVertTouchX	ref/raycasting/raycasting-js/raycast.js	/^        var nextVertTouchX = xintercept;$/;"	v
nextVertTouchY	ref/raycasting/raycasting-js/raycast.js	/^        var nextVertTouchY = yintercept;$/;"	v
normalizeAngle	ref/raycasting/raycasting-js/raycast.js	/^function normalizeAngle(angle) {$/;"	f
paint_screen	work/main.c	/^static void paint_screen(const t_mlx *mlx, const t_img *floor,$/;"	f	file:
player	ref/raycasting/raycasting-c/src/main.c	/^} player;$/;"	v	typeref:struct:Player
processInput	ref/raycasting/raycasting-c/src/main.c	/^void processInput() {$/;"	f
rays	ref/raycasting/raycasting-js/raycast.js	/^var rays = [];$/;"	v
render	ref/raycasting/raycasting-c/src/main.c	/^void render() {$/;"	f
render3DProjectedWalls	ref/raycasting/raycasting-js/raycast.js	/^function render3DProjectedWalls() {$/;"	f
renderCeiling	ref/raycasting/raycasting-js/raycast.js	/^function renderCeiling() {$/;"	f
renderFloor	ref/raycasting/raycasting-js/raycast.js	/^function renderFloor() {$/;"	f
renderMap	ref/raycasting/raycasting-c/src/main.c	/^void renderMap() {$/;"	f
renderPlayer	ref/raycasting/raycasting-c/src/main.c	/^void renderPlayer() {$/;"	f
renderer	ref/raycasting/raycasting-c/src/main.c	/^SDL_Renderer* renderer = NULL;$/;"	v
rotationAngle	ref/raycasting/raycasting-c/src/main.c	/^    float rotationAngle;$/;"	m	struct:Player	file:
setup	ref/raycasting/raycasting-c/src/main.c	/^void setup() {$/;"	f
setup	ref/raycasting/raycasting-js/raycast.js	/^function setup() {$/;"	f
t_img	work/minimap.h	/^} t_img;$/;"	t	typeref:struct:__anon2
t_mlx	work/minimap.h	/^} t_mlx;$/;"	t	typeref:struct:__anon1
ticksLastFrame	ref/raycasting/raycasting-c/src/main.c	/^int ticksLastFrame;$/;"	v
tileY	ref/raycasting/raycasting-js/raycast.js	/^                var tileY = i * TILE_SIZE;$/;"	v
turnDirection	ref/raycasting/raycasting-c/src/main.c	/^    int turnDirection; \/\/ -1 for left, +1 for right$/;"	m	struct:Player	file:
turnSpeed	ref/raycasting/raycasting-c/src/main.c	/^    float turnSpeed;$/;"	m	struct:Player	file:
update	ref/raycasting/raycasting-c/src/main.c	/^void update() {$/;"	f
update	ref/raycasting/raycasting-js/raycast.js	/^function update() {$/;"	f
vertWallColor	ref/raycasting/raycasting-js/raycast.js	/^        var vertWallColor = 0;$/;"	v
vertWallHitX	ref/raycasting/raycasting-js/raycast.js	/^        var vertWallHitX = 0;$/;"	v
vertWallHitY	ref/raycasting/raycasting-js/raycast.js	/^        var vertWallHitY = 0;$/;"	v
walkDirection	ref/raycasting/raycasting-c/src/main.c	/^    int walkDirection; \/\/ -1 for back, +1 for front$/;"	m	struct:Player	file:
walkSpeed	ref/raycasting/raycasting-c/src/main.c	/^    float walkSpeed;$/;"	m	struct:Player	file:
width	ref/raycasting/raycasting-c/src/main.c	/^    float width;$/;"	m	struct:Player	file:
win_ptr	work/minimap.h	/^  void *win_ptr;$/;"	m	struct:__anon1
window	ref/raycasting/raycasting-c/src/main.c	/^SDL_Window* window = NULL;$/;"	v
x	ref/raycasting/raycasting-c/src/main.c	/^    float x;$/;"	m	struct:Player	file:
xstep	ref/raycasting/raycasting-js/raycast.js	/^        var xstep, ystep;$/;"	v
y	ref/raycasting/raycasting-c/src/main.c	/^    float y;$/;"	m	struct:Player	file:
